{"version":3,"file":"index.es.js","sources":["../src/useFieldValidator.js","../src/useFieldValues.js","../src/useForm.js"],"sourcesContent":["\nimport React,{ useState,useEffect } from \"react\";\n/*\nvalidateFN :: String -> String -> Object -> Boolean\nvalidateFN :: FieldProp -> FieldValue -> CurrentFormValues -> Boolean\n\n*/\nexport default (initialState,validateFn) => {\n  const [debug,setDebug] = useState(false)\n\n  const [validationStatus, setValidationStatus] = useState({});\n  const [formValid, setFormValid] = useState(true)\n\n  const handleValidation = (fieldValues,forceTouched=false) => {\n    debug && console.log('[VALIDATOR] - Begin',fieldValues,forceTouched)\n    debug && !validateFn&& console.error('[VALIDATOR] no validation function set')\n    let newValidationStatus ={}\n    let formIsValid = true;\n    Object.keys(fieldValues).map( field => {\n      const value         = fieldValues[field]; // current value\n      const initialValue  = initialState[field]; // initial Value\n\n      // has the field been touched ? initially false .\n      let touched = typeof (validationStatus[field]) ==='undefined' ? false: validationStatus[field].touched;\n\n      // is field valid. ?\n      const validationResult =  validateFn ? validateFn(field,value,fieldValues) : true;\n\n      // if validation function returns empty string or true, this is a success\n      const validationSuccess = validationResult === '' || validationResult ===true ? true: false;\n      const error = typeof(validationResult) === 'string' ? validationResult : '';\n\n      let valid = validationSuccess\n\n      if( !touched && fieldValues[field] !== initialState[field]){\n        touched = true\n      }\n\n      if(forceTouched){\n        touched=true\n      }\n\n      newValidationStatus[field] = {valid,touched,error}\n      formIsValid = formIsValid && valid\n    })\n    setFormValid(formIsValid)\n    setValidationStatus(newValidationStatus)\n\n    debug && console.log('[VALIDATOR] - Done',newValidationStatus,forceTouched)\n\n    return newValidationStatus;\n  }\n\n\n  const setTouched = (key,value) => {\n    let newState = {...validationStatus} ;\n    newState[key].touched = value;\n    setValidationStatus(newState)\n    return newState;\n  }\n\n  const handleSubmit = (event)=> {\n      /*setFormTouched(true)\n      console.log(formIsValid,fields,validationStatus)\n      if(formIsValid){\n        submitFn(fields,validationStatus);\n      }else{\n        setValidation(handleValidation(fields,true))\n      }\n      event.preventDefault();*/\n  }\n\n\n\n  return {\n    formValid,validationStatus,handleValidation,setTouched,setDebug\n  };\n}\n","import React, { useState, useMemo, useCallback } from \"react\";\n\nexport default (initialState = {}, attribute = 'name') => {\n  const [values, setValues] = useState(initialState);\n  const [touched,setTouched] = useState(false);\n  const handleChange =(event) => {\n    setTouched(true);\n    if (typeof (event.target[attribute]) === 'undefined') {\n      throw new Error(`[useFieldValue] attribute \"${attribute}\"  not present on target node`)\n    }\n    const newState = {\n      ...values,\n      [event.target[attribute]]: event.target.value\n    }\n    setValues(newState);\n    return newState;\n  }\n\n  const replaceValues =(values) => setValues(values)\n\n  return {\n    values,\n    touched,\n    handleChange,\n    replaceValues,\n    inputProps: prop => ({\n      onChange: handleChange,\n      value: values[prop],\n      [attribute]:prop\n    })\n  };\n}\n","import React,{ useState,useEffect } from \"react\";\n\nimport useFieldValues from './useFieldValues'\nimport useFieldValidator from './useFieldValidator'\n\nexport default (initialState,submitFn,validateFn,prop='name',dbg) => {\n\n  const [debug,setDebug] = useState(dbg || false)\n  const [formTouched,setFormTouched] = useState(false)\n\n  const [shouldSubmit,setShouldSubmit] = useState(false);\n  const {values: fields, handleChange : handleFieldChange,inputProps} = useFieldValues(initialState,prop);\n\n  const {formValid,validationStatus,handleValidation,setTouched,setDebug:setValidatorDebug} = useFieldValidator(initialState,validateFn)\n\n\n  const handleSubmit = (event)=> {\n      setFormTouched(true)\n      debug && console.log('[SUBMIT_ATTEMPT]',formValid,fields,validationStatus)\n      handleValidation(fields,true);\n      \n      setShouldSubmit(true)\n     /* if(formValid){\n        debug && console.log('[FORM IS VALID -> SUBMITTING]',fields)\n\n        submitFn(fields,validationStatus);\n      }else{\n        handleValidation(fields,true);\n      }*/\n  //    handleValidation(fields,true);\n      event.preventDefault();\n  }\n\n  const handleEvent = (event) => {\n    const fieldKey = event.target[prop]\n    debug && console.log('[FORM_EVENT]',event.type, event.target[prop])\n    if( event.type === 'input'){\n      let newState = handleFieldChange(event);\n  //    handleValidation(newState)\n    }\n\n    if(event.type ==='blur'){\n      setTouched(fieldKey,true)\n\n      handleValidation(fields)\n    }\n    if(event.type === 'focus'){\n\n      \n    }\n  }\n\n  useEffect(()=>{\n    if(shouldSubmit && formValid){\n      debug && console.log('[FORM IS VALID -> SUBMITTING]',fields)\n      submitFn(fields,validationStatus);\n    }\n    if(shouldSubmit){\n      setShouldSubmit(false)\n    }\n  },[shouldSubmit,formValid])\n\n  useEffect(()=>{\n    setValidatorDebug(debug)\n\n    handleValidation(fields)\n  },[])\n\n  return {\n    fields,\n    inputProps,\n    setDebug,\n    validator:validationStatus,\n    handleSubmit,\n    formProps:{\n      onSubmit:handleSubmit\n    },\n    handleInput:handleEvent,\n    handleEvents: {onChange:handleEvent,onBlur:handleEvent,onFocus:handleEvent}\n  };\n}\n"],"names":["initialState","validateFn","useState","debug","setDebug","validationStatus","setValidationStatus","formValid","setFormValid","handleValidation","fieldValues","forceTouched","console","log","error","newValidationStatus","formIsValid","Object","keys","map","field","value","initialValue","touched","validationResult","validationSuccess","valid","setTouched","key","newState","attribute","values","setValues","handleChange","event","target","Error","replaceValues","inputProps","prop","onChange","submitFn","dbg","formTouched","setFormTouched","shouldSubmit","setShouldSubmit","useFieldValues","fields","handleFieldChange","useFieldValidator","setValidatorDebug","handleSubmit","preventDefault","handleEvent","fieldKey","type","useEffect","validator","formProps","onSubmit","handleInput","handleEvents","onBlur","onFocus"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;AAKA,yBAAe,UAACA,YAAD,EAAcC,UAAd,EAA6B;AAAA,kBACjBC,QAAQ,CAAC,KAAD,CADS;AAAA;AAAA,MACnCC,KADmC;AAAA,MAC7BC,QAD6B;;AAAA,mBAGMF,QAAQ,CAAC,EAAD,CAHd;AAAA;AAAA,MAGnCG,gBAHmC;AAAA,MAGjBC,mBAHiB;;AAAA,mBAIRJ,QAAQ,CAAC,IAAD,CAJA;AAAA;AAAA,MAInCK,SAJmC;AAAA,MAIxBC,YAJwB;;AAM1C,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD,EAAoC;AAAA,QAAvBC,YAAuB,uEAAV,KAAU;AAC3DR,IAAAA,KAAK,IAAIS,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCH,WAAlC,EAA8CC,YAA9C,CAAT;AACAR,IAAAA,KAAK,IAAI,CAACF,UAAV,IAAuBW,OAAO,CAACE,KAAR,CAAc,wCAAd,CAAvB;AACA,QAAIC,mBAAmB,GAAE,EAAzB;AACA,QAAIC,WAAW,GAAG,IAAlB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYR,WAAZ,EAAyBS,GAAzB,CAA8B,UAAAC,KAAK,EAAI;AACrC,UAAMC,KAAK,GAAWX,WAAW,CAACU,KAAD,CAAjC,CADqC;;AAErC,UAAME,YAAY,GAAItB,YAAY,CAACoB,KAAD,CAAlC,CAFqC;AAIrC;;AACA,UAAIG,OAAO,GAAG,OAAQlB,gBAAgB,CAACe,KAAD,CAAxB,KAAoC,WAApC,GAAkD,KAAlD,GAAyDf,gBAAgB,CAACe,KAAD,CAAhB,CAAwBG,OAA/F,CALqC;;AAQrC,UAAMC,gBAAgB,GAAIvB,UAAU,GAAGA,UAAU,CAACmB,KAAD,EAAOC,KAAP,EAAaX,WAAb,CAAb,GAAyC,IAA7E,CARqC;;AAWrC,UAAMe,iBAAiB,GAAGD,gBAAgB,KAAK,EAArB,IAA2BA,gBAAgB,KAAI,IAA/C,GAAsD,IAAtD,GAA4D,KAAtF;AACA,UAAMV,KAAK,GAAG,OAAOU,gBAAP,KAA6B,QAA7B,GAAwCA,gBAAxC,GAA2D,EAAzE;AAEA,UAAIE,KAAK,GAAGD,iBAAZ;;AAEA,UAAI,CAACF,OAAD,IAAYb,WAAW,CAACU,KAAD,CAAX,KAAuBpB,YAAY,CAACoB,KAAD,CAAnD,EAA2D;AACzDG,QAAAA,OAAO,GAAG,IAAV;AACD;;AAED,UAAGZ,YAAH,EAAgB;AACdY,QAAAA,OAAO,GAAC,IAAR;AACD;;AAEDR,MAAAA,mBAAmB,CAACK,KAAD,CAAnB,GAA6B;AAACM,QAAAA,KAAK,EAALA,KAAD;AAAOH,QAAAA,OAAO,EAAPA,OAAP;AAAeT,QAAAA,KAAK,EAALA;AAAf,OAA7B;AACAE,MAAAA,WAAW,GAAGA,WAAW,IAAIU,KAA7B;AACD,KA1BD;AA2BAlB,IAAAA,YAAY,CAACQ,WAAD,CAAZ;AACAV,IAAAA,mBAAmB,CAACS,mBAAD,CAAnB;AAEAZ,IAAAA,KAAK,IAAIS,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCE,mBAAjC,EAAqDJ,YAArD,CAAT;AAEA,WAAOI,mBAAP;AACD,GAtCD;;AAyCA,MAAMY,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAKP,KAAL,EAAe;AAChC,QAAIQ,QAAQ,sBAAOxB,gBAAP,CAAZ;;AACAwB,IAAAA,QAAQ,CAACD,GAAD,CAAR,CAAcL,OAAd,GAAwBF,KAAxB;AACAf,IAAAA,mBAAmB,CAACuB,QAAD,CAAnB;AACA,WAAOA,QAAP;AACD,GALD;;AAoBA,SAAO;AACLtB,IAAAA,SAAS,EAATA,SADK;AACKF,IAAAA,gBAAgB,EAAhBA,gBADL;AACsBI,IAAAA,gBAAgB,EAAhBA,gBADtB;AACuCkB,IAAAA,UAAU,EAAVA,UADvC;AACkDvB,IAAAA,QAAQ,EAARA;AADlD,GAAP;AAGD,CAtED;;ACLA,sBAAe,YAA2C;AAAA,MAA1CJ,YAA0C,uEAA3B,EAA2B;AAAA,MAAvB8B,SAAuB,uEAAX,MAAW;;AAAA,kBAC5B5B,QAAQ,CAACF,YAAD,CADoB;AAAA;AAAA,MACjD+B,MADiD;AAAA,MACzCC,SADyC;;AAAA,mBAE3B9B,QAAQ,CAAC,KAAD,CAFmB;AAAA;AAAA,MAEjDqB,OAFiD;AAAA,MAEzCI,UAFyC;;AAGxD,MAAMM,YAAY,GAAE,SAAdA,YAAc,CAACC,KAAD,EAAW;AAC7BP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI,OAAQO,KAAK,CAACC,MAAN,CAAaL,SAAb,CAAR,KAAqC,WAAzC,EAAsD;AACpD,YAAM,IAAIM,KAAJ,uCAAwCN,SAAxC,oCAAN;AACD;;AACD,QAAMD,QAAQ,qCACTE,MADS,2BAEXG,KAAK,CAACC,MAAN,CAAaL,SAAb,CAFW,EAEeI,KAAK,CAACC,MAAN,CAAad,KAF5B,EAAd;;AAIAW,IAAAA,SAAS,CAACH,QAAD,CAAT;AACA,WAAOA,QAAP;AACD,GAXD;;AAaA,MAAMQ,aAAa,GAAE,SAAfA,aAAe,CAACN,MAAD;AAAA,WAAYC,SAAS,CAACD,MAAD,CAArB;AAAA,GAArB;;AAEA,SAAO;AACLA,IAAAA,MAAM,EAANA,MADK;AAELR,IAAAA,OAAO,EAAPA,OAFK;AAGLU,IAAAA,YAAY,EAAZA,YAHK;AAILI,IAAAA,aAAa,EAAbA,aAJK;AAKLC,IAAAA,UAAU,EAAE,oBAAAC,IAAI;AAAA;AACdC,QAAAA,QAAQ,EAAEP,YADI;AAEdZ,QAAAA,KAAK,EAAEU,MAAM,CAACQ,IAAD;AAFC,SAGbT,SAHa,EAGFS,IAHE;AAAA;AALX,GAAP;AAWD,CA7BD;;ACGA,eAAe,UAACvC,YAAD,EAAcyC,QAAd,EAAuBxC,UAAvB,EAAsD;AAAA,MAApBsC,IAAoB,uEAAf,MAAe;AAAA,MAARG,GAAQ;;AAAA,kBAE1CxC,QAAQ,CAACwC,GAAG,IAAI,KAAR,CAFkC;AAAA;AAAA,MAE5DvC,KAF4D;AAAA,MAEtDC,QAFsD;;AAAA,mBAG9BF,QAAQ,CAAC,KAAD,CAHsB;AAAA;AAAA,MAG5DyC,WAH4D;AAAA,MAGhDC,cAHgD;;AAAA,mBAK5B1C,QAAQ,CAAC,KAAD,CALoB;AAAA;AAAA,MAK5D2C,YAL4D;AAAA,MAK/CC,eAL+C;;AAAA,wBAMGC,cAAc,CAAC/C,YAAD,EAAcuC,IAAd,CANjB;AAAA,MAMpDS,MANoD,mBAM5DjB,MAN4D;AAAA,MAM7BkB,iBAN6B,mBAM5ChB,YAN4C;AAAA,MAMXK,UANW,mBAMXA,UANW;;AAAA,2BAQyBY,iBAAiB,CAAClD,YAAD,EAAcC,UAAd,CAR1C;AAAA,MAQ5DM,SAR4D,sBAQ5DA,SAR4D;AAAA,MAQlDF,gBARkD,sBAQlDA,gBARkD;AAAA,MAQjCI,gBARiC,sBAQjCA,gBARiC;AAAA,MAQhBkB,UARgB,sBAQhBA,UARgB;AAAA,MAQIwB,iBARJ,sBAQL/C,QARK;;AAWnE,MAAMgD,YAAY,GAAG,SAAfA,YAAe,CAAClB,KAAD,EAAU;AAC3BU,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAzC,IAAAA,KAAK,IAAIS,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BN,SAA/B,EAAyCyC,MAAzC,EAAgD3C,gBAAhD,CAAT;AACAI,IAAAA,gBAAgB,CAACuC,MAAD,EAAQ,IAAR,CAAhB;AAEAF,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD;;;;;;AAOH;;AACIZ,IAAAA,KAAK,CAACmB,cAAN;AACH,GAfD;;AAiBA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACpB,KAAD,EAAW;AAC7B,QAAMqB,QAAQ,GAAGrB,KAAK,CAACC,MAAN,CAAaI,IAAb,CAAjB;AACApC,IAAAA,KAAK,IAAIS,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BqB,KAAK,CAACsB,IAAjC,EAAuCtB,KAAK,CAACC,MAAN,CAAaI,IAAb,CAAvC,CAAT;;AACA,QAAIL,KAAK,CAACsB,IAAN,KAAe,OAAnB,EAA2B;AACzB,UAAI3B,QAAQ,GAAGoB,iBAAiB,CAACf,KAAD,CAAhC,CADyB;AAG1B;;AAED,QAAGA,KAAK,CAACsB,IAAN,KAAc,MAAjB,EAAwB;AACtB7B,MAAAA,UAAU,CAAC4B,QAAD,EAAU,IAAV,CAAV;AAEA9C,MAAAA,gBAAgB,CAACuC,MAAD,CAAhB;AACD;;AACD,QAAGd,KAAK,CAACsB,IAAN,KAAe,OAAlB,EAA0B;AAI3B,GAjBD;;AAmBAC,EAAAA,SAAS,CAAC,YAAI;AACZ,QAAGZ,YAAY,IAAItC,SAAnB,EAA6B;AAC3BJ,MAAAA,KAAK,IAAIS,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA4CmC,MAA5C,CAAT;AACAP,MAAAA,QAAQ,CAACO,MAAD,EAAQ3C,gBAAR,CAAR;AACD;;AACD,QAAGwC,YAAH,EAAgB;AACdC,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GARQ,EAQP,CAACD,YAAD,EAActC,SAAd,CARO,CAAT;AAUAkD,EAAAA,SAAS,CAAC,YAAI;AACZN,IAAAA,iBAAiB,CAAChD,KAAD,CAAjB;AAEAM,IAAAA,gBAAgB,CAACuC,MAAD,CAAhB;AACD,GAJQ,EAIP,EAJO,CAAT;AAMA,SAAO;AACLA,IAAAA,MAAM,EAANA,MADK;AAELV,IAAAA,UAAU,EAAVA,UAFK;AAGLlC,IAAAA,QAAQ,EAARA,QAHK;AAILsD,IAAAA,SAAS,EAACrD,gBAJL;AAKL+C,IAAAA,YAAY,EAAZA,YALK;AAMLO,IAAAA,SAAS,EAAC;AACRC,MAAAA,QAAQ,EAACR;AADD,KANL;AASLS,IAAAA,WAAW,EAACP,WATP;AAULQ,IAAAA,YAAY,EAAE;AAACtB,MAAAA,QAAQ,EAACc,WAAV;AAAsBS,MAAAA,MAAM,EAACT,WAA7B;AAAyCU,MAAAA,OAAO,EAACV;AAAjD;AAVT,GAAP;AAYD,CA3ED;;;;"}